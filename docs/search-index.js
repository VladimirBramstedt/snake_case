var N=null,E="",T="t",U="u",searchIndex={};
var R=["snakecase","invalidsnakecase","result","from_str","snakecaseref","as_str","to_owned","string","clone_into","try_from","try_into","borrow_mut","to_string","type_id","ordering","partial_cmp","formatter","borrow","SnakeCase","SnakeCaseRef","InvalidSnakeCase"];

searchIndex["snake_case"]={"doc":E,"i":[[3,R[20],"snake_case","Only one possible error: the given string was not valid…",N,N],[3,R[18],E,"An owning string type that can only contain valid…",N,N],[3,R[19],E,"An non-owning string type that can only refer to string…",N,N],[5,"is_snake_case",E,"Is the given string a non-empty snake_case string? In…",N,[[["str"]],["bool"]]],[11,R[3],E,E,0,[[["str"]],[[R[0]],[R[2],[R[0],R[1]]],[R[1]]]]],[11,"from_string",E,E,0,[[[R[7]]],[[R[0]],[R[2],[R[0],R[1]]],[R[1]]]]],[11,R[5],E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]],[R[4]]]],[11,R[3],E,E,1,[[["str"]],[[R[4]],[R[1]],[R[2],[R[4],R[1]]]]]],[11,R[5],E,E,1,[[["self"]],["str"]]],[11,R[6],E,E,1,[[["self"]],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"],[T]]]],[11,R[9],E,E,2,[[[U]],[R[2]]]],[11,R[10],E,E,2,[[],[R[2]]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[["self"]],[R[7]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"],[T]]]],[11,R[9],E,E,0,[[[U]],[R[2]]]],[11,R[10],E,E,0,[[],[R[2]]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[["self"]],[R[7]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"],[T]]]],[11,R[9],E,E,1,[[[U]],[R[2]]]],[11,R[10],E,E,1,[[],[R[2]]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],["typeid"]]],[11,"clone",E,E,2,[[["self"]],[R[1]]]],[11,"clone",E,E,0,[[["self"]],[R[0]]]],[11,"clone",E,E,1,[[["self"]],[R[4]]]],[11,R[15],E,E,0,[[["self"],[R[0]]],[["option",[R[14]]],[R[14]]]]],[11,"lt",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,R[15],E,E,1,[[["self"],[R[4]]],[["option",[R[14]]],[R[14]]]]],[11,"lt",E,E,1,[[["self"],[R[4]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[4]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[4]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[4]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[0]]],[R[14]]]],[11,"cmp",E,E,1,[[["self"],[R[4]]],[R[14]]]],[11,"eq",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[7]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[4]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[4]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[7]]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[2]]]],[11,R[9],E,E,0,[[["str"]],[R[2]]]],[11,R[9],E,E,0,[[[R[7]]],[R[2]]]],[11,R[9],E,E,1,[[["str"]],[R[2]]]],[11,R[17],E,E,0,[[["self"]],["str"]]],[11,R[17],E,E,1,[[["self"]],["str"]]]],"p":[[3,R[18]],[3,R[19]],[3,R[20]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);