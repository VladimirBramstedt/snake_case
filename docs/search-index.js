var N=null,E="",T="t",U="u",searchIndex={};
var R=["snakecase","invalidsnakecase","result","to_owned","clone_into","try_from","try_into","borrow","borrow_mut","type_id","ordering","formatter","SnakeCase","InvalidSnakeCase"];

searchIndex["snake_case"]={"doc":E,"i":[[3,R[12],"snake_case","A string that can only be valid snake_case. In other…",N,N],[3,R[13],E,"Only one possible error: the given string was not valid…",N,N],[5,"is_snake_case",E,"Is the given string a non-empty snake_case string? In…",N,[[["str"]],["bool"]]],[11,"from_str",E,E,0,[[["str"]],[[R[0]],[R[1]],[R[2],[R[0],R[1]]]]]],[11,"as_str",E,E,0,[[["self"]],["str"]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"to_string",E,E,0,[[["self"]],["string"]]],[11,R[5],E,E,0,[[[U]],[R[2]]]],[11,R[6],E,E,0,[[],[R[2]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],["typeid"]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[[U]],[R[2]]]],[11,R[6],E,E,1,[[],[R[2]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],["typeid"]]],[11,"clone",E,E,0,[[["self"]],[R[0]]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"partial_cmp",E,E,0,[[["self"],[R[0]]],[["option",[R[10]]],[R[10]]]]],[11,"lt",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["string"]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[0]]],[R[10]]]],[11,"deref",E,E,0,[[["self"]],["str"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[2]]]],[11,R[7],E,E,0,[[["self"]],["str"]]],[11,"serialize",E,E,0,[[["self"],["__s"]],[R[2]]]],[11,"deserialize",E,E,0,[[["d"]],[R[2]]]]],"p":[[3,R[12]],[3,R[13]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);